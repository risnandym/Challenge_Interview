definitions:
  controllers.TimeInput:
    properties:
      hours:
        type: integer
      minutes:
        type: integer
      seconds:
        type: integer
    type: object
  controllers.movieInput:
    properties:
      artists:
        type: string
      description:
        type: string
      duration:
        type: integer
      genres:
        type: string
      title:
        type: string
    type: object
  models.Movie:
    properties:
      artists:
        type: string
      description:
        type: string
      duration:
        type: integer
      genres:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /challenge-1:
    post:
      description: calculation time from "60" to "100" format.
      parameters:
      - description: the body to input earth time.
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.TimeInput'
      produces:
      - application/json
      responses: {}
      summary: Time Calculation.
      tags:
      - Challenge-1 Time Calculation
  /movie/{id}:
    delete:
      description: Delete a movie by id.
      parameters:
      - description: movie id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: boolean
            type: object
      summary: Delete one movie.
      tags:
      - Movie
  /movies:
    get:
      description: Get a list of Movies.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Movie'
            type: array
      summary: Get all movies.
      tags:
      - Movie
    post:
      description: Creating a new Movie.
      parameters:
      - description: the body to create a new movie
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.movieInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Movie'
      summary: Create New Movie.
      tags:
      - Movie
  /movies/{id}:
    get:
      description: Get a Movie by id.
      parameters:
      - description: movie id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Movie'
      summary: Get Movie.
      tags:
      - Movie
    patch:
      description: Update movie by id.
      parameters:
      - description: movie id
        in: path
        name: id
        required: true
        type: string
      - description: the body to update an movie
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.movieInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Movie'
      summary: Update Movie.
      tags:
      - Movie
swagger: "2.0"
